<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>他已不在地坛，地坛在我</title>
    <url>/%E7%A2%8E%E7%A2%8E%E5%BF%B5/Others/%E5%9C%B0%E5%9D%9B%E5%9C%A8%E6%88%91/</url>
    <content><![CDATA[<p>今天听安图声乐队的《逆流时光》，单曲循环+12s的crossfade（交叉淡入淡出），前奏和尾奏混在一起，像极了这个对太阳比喻：</p>
<blockquote>
<p>但是太阳，它每时每刻都是夕阳也都是旭日。当它熄灭着走下山去收尽苍凉残照之际，正是它在另一面燃烧着爬上山巅布散烈烈朝辉之时。那一天，我也将沉静着走下山去，扶着我的拐杖。有一天，在某一处山洼里，势必会跑上来一个欢蹦的孩子，抱着他的玩具。</p>
<p>当然，那不是我。</p>
<p>但是，那不是我吗？</p>
<p>宇宙以其不息的欲望将一个歌舞炼为永恒，这欲望有怎样一个人间的姓名，大可忽略不计。”</p>
</blockquote>
]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>女性主义不该是伪命题</title>
    <url>/%E8%A7%82%E7%82%B9/Perspective/%E6%88%91%E7%9A%84%E5%B9%B3%E6%9D%83%E8%A7%82%E5%BF%B5/</url>
    <content><![CDATA[<p><img src="https://i.pinimg.com/736x/d3/fa/0c/d3fa0c60856b7067bf4883f90157b38e.jpg" alt="无数渺小的思考填满了人的一生。"></p>
<p>今天，查看近期RSS订阅时，看到一篇文章写得很好：<a href="https://mp.weixin.qq.com/s/CZP6AOB6Y74JIoDeNZauvg">《维舟：“渣男”满天飞，意味着什么？》</a>。</p>
<p>我也想写出这样哲思的社会观察。</p>
<h2 id="我的渺小思考"><a href="#我的渺小思考" class="headerlink" title="我的渺小思考"></a>我的渺小思考</h2><p>这篇文章唤起了我很多细碎的思考：关于女权，关于性与权力结构，关于该如何践行女性主义，该如何实现真正的平权，一个支持女性主义的男性要不要对披着面具的田园女拳们低头。</p>
<p>曾经妇女能顶半边天的中国，如今女拳大行其道。雨打风吹去，令人嗟叹。</p>
<p>我一直被困扰在很多女性只是虚伪地谈论女权。很懊恼。在真实的生活实践中这只是她们利用自己性别在两性中的弱势，来自私地剥削更多利益的手段。尽管这个过程中，真实回击了剥削女性的男性，但是，这个贪婪牟利的过程中，不仅伤害了支持平权的男性，而且伤害到了那些自强、独立的女性主义的女性。</p>
<p>具体的人并不像幻想出的抽象的人那样完美。女性主义者并不需要完美无瑕。将某类人幻想成完人，只是为了更便捷地打倒。</p>
<p>但是，在我有限的观察视野中，我感知到的真正的、自强的、独立的女性主义者还是太少了。</p>
<p>我真诚地希望这是因为我的视角太小，感知愚钝，或者是人的本质难以洞察，而不是现实就是浑浊的。</p>
<h2 id="再议"><a href="#再议" class="headerlink" title="再议"></a>再议</h2><p>现在该回到对这篇文章的讨论了，这篇文章的切入角度很好。赞赏的话不用多说，是值得一读的好文章。</p>
<h3 id="disagree-1"><a href="#disagree-1" class="headerlink" title="disagree-1"></a>disagree-1</h3><p>这篇文章的结尾:</p>
<blockquote>
<p>重要的不是回归某种绝对无可挑剔的道德立场，而是在法律的基础上，容许不同人都去寻求自身的解放。</p>
</blockquote>
<p>作者仓猝地以“接受不完美，接受不同”对这篇文章进行收尾。 </p>
<p>这里存在一个需要反对的点：在今天经济衰退和生育率下降的情况下，我们能够很明显地看到法律对于男性和女性并不是平等的[1,2]。所以，作者说在法律的基础上，去寻找性别权力解放并不可行。</p>
<p>在一个父权社会中，女权主义者该走一条温和的道路还是一条对抗的道路呢？尽管已经有很多国家给中国做参考，中国化的道路仍不可避免。</p>
<h3 id="disagree-2"><a href="#disagree-2" class="headerlink" title="disagree-2"></a>disagree-2</h3><p>另一个地方在于，这篇文章只讨论了抽象的道德和法律，用了大量概念，把具体解构，</p>
<p>而没有进一步挖掘，直接撕开外衣，直面男性和女性的生育、家庭、社会等价值。（我一直认为量化的社会科学才是有意义的文科，空谈误国）</p>
<p>当然如果从量化的角度来说，我对于平权是很悲观的。我认为平权只是一个很理想的目标。在只有女性拥有子宫的情况下，在人类还需要亲自参与繁殖的情况下，在男性和女性存在生理差异的情况下，……，现实的引力太重，使得平权变成了在地上建立天国，只会带来无尽的灾难。</p>
<p>可是，谁不喜欢天国呢？虽不能至，心向往之。进一寸有一寸的欢喜。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://baike.baidu.com/item/%E9%9B%A2%E5%A9%9A%E5%86%B7%E9%9D%9C%E6%9C%9F/9751788">离婚冷静期-百度百科</a></p>
<p>[2] <a href="http://opinion.people.com.cn/n1/2020/0515/c1003-31709723.html">中青报：人大代表提议提高“性同意年龄”值得认真考虑</a></p>
]]></content>
      <categories>
        <category>观点</category>
      </categories>
      <tags>
        <tag>观点</tag>
        <tag>女性主义</tag>
        <tag>平权</tag>
      </tags>
  </entry>
  <entry>
    <title>《涉过愤怒的海》影评</title>
    <url>/%E8%B8%A9%E5%9D%91/Movies/%E3%80%8A%E6%B6%89%E8%BF%87%E6%84%A4%E6%80%92%E7%9A%84%E6%B5%B7%E3%80%8B/</url>
    <content><![CDATA[<p>本人年度最低性价比电影：《涉过愤怒的海》</p>
<p>知道张艺谋现在不行了，知道陈凯歌不行，结果没想到曹保平也拉了。</p>
<p>以为憋了个狠活，结果拉我一大坨。</p>
<p>一看到咪咪打车和VOSS的广告植入，我就知道完了，进鸿门宴了。</p>
<h2 id="刻意的奇观："><a href="#刻意的奇观：" class="headerlink" title="刻意的奇观："></a>刻意的奇观：</h2><ul>
<li>致敬了余华的《在细雨中呼喊》“老天爷，你下吊吧！肏死我吧！”。在台风天下鱼，降智推进剧情，爆肏观众。</li>
</ul>
<h2 id="立不住的人物："><a href="#立不住的人物：" class="headerlink" title="立不住的人物："></a>立不住的人物：</h2><ul>
<li>出租车司机踩油门的时候，邪魅一笑</li>
<li>窃喜地告诉朋友父亲朋友去世消息的小琳，但居然没参与到杀人中！</li>
<li>把警察戴震拍成疑似李苗苗家庭的熟人<ul>
<li>如果不是这样，我真的厌蠢症犯了</li>
<li>上一部《烈日灼心》的段奕宏的形象多好啊，怎么这次就瞎拍呢</li>
</ul>
</li>
<li>神经质的日本警察<ul>
<li>上半句说日语，下半句说中文，但居然没有任何指涉，就是单纯的双语切换犯病</li>
</ul>
</li>
<li>大量刻板印象，模板化人物形象：<ul>
<li>受原生家庭创伤的女性就非得是那样？</li>
<li>先天变态就非得是那样？</li>
</ul>
</li>
<li>李苗苗到底是一个怎么样的变态？<ul>
<li>尽管是先天变态，但来自他的原生家庭的原因完全没做剖析。</li>
<li>没杀女主，怎么就想杀女主爸爸了？</li>
</ul>
</li>
</ul>
<h2 id="视角"><a href="#视角" class="headerlink" title="视角"></a>视角</h2><ul>
<li>傲慢<ul>
<li>整个电影表达了一个60岁老头视图理解什么是原生家庭的伤害，但是什么也没理解出来。</li>
</ul>
</li>
<li>很多电影只会用随便和一个男的做爱表达一个缺爱的迷茫少女，属实难绷</li>
<li>用强奸表达对女性凌辱，不会别的了是吧？导演是不是以为对女性的凌辱只有这一种方式？</li>
<li>老男人视角之“coser没好人，二次元就是逃避现实”</li>
</ul>
<h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><ul>
<li>喜欢拍周迅高跟鞋踩油门是吧？有没有别的表达方式了？李保田歪嘴表达狠踩油门没学会吗？拍面部表情不行吗？为迅姐的优秀表演惋惜。</li>
<li>一个父亲寻仇的故事底色，你用喜悦的音乐回忆女主日本的经历是吧？折磨、恶心到了观众不意味着你拍得好。感觉《漫长的季节》的回忆处理得很好<ul>
<li>这个观点我觉得会有争议，因为大家对于讲了什么，怎么讲有不同看法。</li>
</ul>
</li>
<li>强压抑性的电影不适合加插科打挥，拍电影之前先想清楚这部电影是什么样子。</li>
</ul>
<h2 id="路径依赖："><a href="#路径依赖：" class="headerlink" title="路径依赖："></a>路径依赖：</h2><ul>
<li>拍完狗十三不过瘾是吧？看到消失的她、孤注一掷挣热钱、也想迎合情绪挣热钱了是吧？<ul>
<li>“人往高处走，水往低处流，俗人是要往高处走的，你别瞧不起俗人，这也不合适。给人点好东西吃，他会记得你原来尊重过别人，你天天想着接地气，掏人兜里的钱，人家进步了回头一看，孙子，你当时给我拍什么烂电影看。” ——姜文 《锵锵三人行》 </li>
</ul>
</li>
<li>我能理解拉投资的人情需要还，一坨狗屎还敢宣传说18岁以下不能看是什么意思？学学王晶吧，人家坦白说自己拍的就是烂片。</li>
</ul>
<h2 id="缺失讨论"><a href="#缺失讨论" class="headerlink" title="缺失讨论"></a>缺失讨论</h2><ul>
<li>我以为会有点什么深刻的讨论，结果还是浮于表面，老一套。</li>
</ul>
<p>回顾我本年度的购票：《流浪地球2》，《宇宙探索编辑部》，《Spider-Man: Across the Spider-Verse 》，《Oppenheimer》，《河边的错误》和《涉过愤怒的海》，尽管小心翼翼，年底还是掉坑。</p>
<p>最深刻的感受是：一代人终将老去，但总有人正年轻。祝福中国新一代影视工作者！！！</p>
]]></content>
      <categories>
        <category>踩坑</category>
      </categories>
      <tags>
        <tag>影视</tag>
        <tag>观点</tag>
      </tags>
  </entry>
  <entry>
    <title>brew命令不能正常使用</title>
    <url>/%E8%B8%A9%E5%9D%91/Pitfalls/brew%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>想尝试一下<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui，但是运行./webui.sh报错了:大概是gfpgan安装不上。">https://github.com/AUTOMATIC1111/stable-diffusion-webui，但是运行./webui.sh报错了:大概是gfpgan安装不上。</a></p>
<p>定位到launch.py.227:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">gfpgan_package &#x3D; os.environ.get(&#39;GFPGAN_PACKAGE&#39;, &quot;git+https:&#x2F;&#x2F;github.com&#x2F;TencentARC&#x2F;GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后修改为：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">gfpgan_package &#x3D; os.environ.get(&#39;GFPGAN_PACKAGE&#39;, &quot;https:&#x2F;&#x2F;github.com&#x2F;TencentARC&#x2F;GFPGAN.git&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>不行。</p>
<p>在./stable-diffusion-webui和./stable-diffusion-webui/venv/lib/pyhton3/site-packages/都手动git clone <a href="https://github.com/TencentARC/GFPGAN.git">https://github.com/TencentARC/GFPGAN.git</a> 还是不行。</p>
<p>遂放弃。</p>
<p>后记：</p>
<p>添加<a href="https://ghproxy.com/即可">https://ghproxy.com/即可</a></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">gfpgan_package &#x3D; os.environ.get(&#39;GFPGAN_PACKAGE&#39;, &quot;https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;TencentARC&#x2F;GFPGAN.git&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>居然是网络问题，看报错根本看不出来！啊 哒哒哒！</p>
<p>中途可能使用了该命令：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git config --global --unset http.proxy

git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h1><p>第二天，就不能正常使用brew相关的命令了。（brew update会涉及到git fetch更新一些仓库的命令）</p>
<p>但最近有在这上面有需求，就不能回避了</p>
<p>下面为我踩坑时常看到的信息:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">brew update --verbose

Checking if we need to fetch &#x2F;opt&#x2F;homebrew...
Fetching &#x2F;opt&#x2F;homebrew...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;carlocab&#x2F;homebrew-personal...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;dart-lang&#x2F;homebrew-dart...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;grpc&#x2F;homebrew-grpc...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask-versions...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-services...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;mongodb&#x2F;homebrew-brew...
Checking if we need to fetch &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;probezy&#x2F;homebrew-core...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;dart-lang&#x2F;homebrew-dart...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;grpc&#x2F;homebrew-grpc...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask-versions...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-services...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;mongodb&#x2F;homebrew-brew...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;probezy&#x2F;homebrew-core...
Fetching &#x2F;opt&#x2F;homebrew&#x2F;Library&#x2F;Taps&#x2F;carlocab&#x2F;homebrew-personal...
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;mongodb&#x2F;homebrew-brew&#x2F;&#39;: Failed to connect to github.com port 443 after 75008 ms: Couldn&#39;t connect to server
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;carlocab&#x2F;homebrew-personal&#x2F;&#39;: Failed to connect to github.com port 443 after 75003 ms: Couldn&#39;t connect to server
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;dart-lang&#x2F;homebrew-dart&#x2F;&#39;: HTTP&#x2F;2 stream 1 was not closed cleanly before end of the underlying stream
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-cask-versions&#x2F;&#39;: HTTP&#x2F;2 stream 1 was not closed cleanly before end of the underlying stream
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;probezy&#x2F;homebrew-core&#x2F;&#39;: HTTP&#x2F;2 stream 1 was not closed cleanly before end of the underlying stream
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-services&#x2F;&#39;: error:02FFF036:system library:func(4095):Connection reset by peer
fatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;grpc&#x2F;homebrew-grpc&#x2F;&#39;: error:02FFF036:system library:func(4095):Connection reset by peer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>中途把github的代理弄了好几个版本，也改过DNS8.8.8.8+重启。</p>
<p>把brew改成清华镜像也不是很有用。</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>最后的解决方案是：</p>
<h2 id="step1"><a href="#step1" class="headerlink" title="step1:"></a>step1:</h2><p>没改DNS，brew镜像.</p>
<p>下面为brew config的输出，以供参考</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">HOMEBREW_VERSION: 4.0.3-32-ga3207a0
ORIGIN: https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew
HEAD: a3207a03900d7b012c999fad911a701baed82be5
Last commit: 4 hours ago
Core tap origin: https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core
Core tap HEAD: 3e0f7cf00d2e1b9ea58aeee6009c3c98dd3fc3fe
Core tap last commit: 47 minutes ago
Core tap branch: master
Core tap JSON: 22 Feb 07:36 UTC
HOMEBREW_PREFIX: &#x2F;opt&#x2F;homebrew
HOMEBREW_BOTTLE_DOMAIN: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;homebrew-bottles
HOMEBREW_CASK_OPTS: []
HOMEBREW_GITHUB_API_TOKEN: set
HOMEBREW_MAKE_JOBS: 8
Homebrew Ruby: 2.6.10 &#x3D;&gt; &#x2F;System&#x2F;Library&#x2F;Frameworks&#x2F;Ruby.framework&#x2F;Versions&#x2F;2.6&#x2F;usr&#x2F;bin&#x2F;ruby
CPU: octa-core 64-bit arm_firestorm_icestorm
Clang: 14.0.0 build 1400
Git: 2.37.1 &#x3D;&gt; &#x2F;Library&#x2F;Developer&#x2F;CommandLineTools&#x2F;usr&#x2F;bin&#x2F;git
Curl: 7.86.0 &#x3D;&gt; &#x2F;usr&#x2F;bin&#x2F;curl
macOS: 13.2.1-arm64
CLT: 14.2.0.0.1.1668646533
Xcode: N&#x2F;A
Rosetta 2: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="step2"><a href="#step2" class="headerlink" title="step2:"></a>step2:</h2><p>修改github的代理为clash的端口(mixed-port为7890，或socks5:7891)。<br>最后我的/Users/changqingaas/.gitconfig文件为:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[user]
	name &#x3D; chang_qing_aas
	email &#x3D; 1736731090@qq.com
[safe]
	directory &#x3D; &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core
[core]
	quotepath &#x3D; false
[filter &quot;lfs&quot;]
	clean &#x3D; git-lfs clean -- %f
	smudge &#x3D; git-lfs smudge -- %f
	process &#x3D; git-lfs filter-process
	required &#x3D; true
[http]
	version &#x3D; HTTP&#x2F;1.1
	proxy &#x3D; socks5:&#x2F;&#x2F;127.0.0.1:7891
[https]
	proxy &#x3D; socks5:&#x2F;&#x2F;127.0.0.1:7891
[http &quot;https:&#x2F;&#x2F;github.com&quot;]
	proxy &#x3D; socks5:&#x2F;&#x2F;127.0.0.1:7891
[https &quot;https:&#x2F;&#x2F;github.com&quot;]
	proxy &#x3D; socks5:&#x2F;&#x2F;127.0.0.1:7891<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>具体命令我没保存，如果觉得有用直接vim .gitconfig修改吧。</p>
<p>我还改了.ssh/config:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Host github.com
   HostName github.com
   User git
   #socks5
   ProxyCommand nc -X 5 -x 127.0.0.1:7891 %h %p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在/etc/config添加:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># Github
140.82.114.3 github.com

185.199.110.133 raw.github.com

185.199.110.133 raw.githubusercontent.com

199.232.69.194 github.global.ssl.fastly.net

185.199.108.153 assets-cdn.github.com

185.199.109.153 assets-cdn.github.com

185.199.110.153 assets-cdn.github.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="step3"><a href="#step3" class="headerlink" title="step3:"></a>step3:</h2><p>我在brew cleanup 遇到”Failed to download <a href="https://formulae.brew.sh/api/cask.json">https://formulae.brew.sh/api/cask.json</a> “<br>这个文件不知道为啥下载很慢，以前没这个问题。<br>使用wget测出需要好几十个小时，才能下完。<br>猜测是终端不能翻墙的原因。<br>遂google<br>在这里看到解决办法：<a href="https://github.com/Homebrew/brew/issues/14516">https://github.com/Homebrew/brew/issues/14516</a><br>我做了如下:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rm -r &quot;$(brew --cache)&#x2F;api&quot; # &#x2F;Users&#x2F;changqingaas&#x2F;Library&#x2F;Caches&#x2F;Homebrew&#x2F;api
export HOMEBREW_NO_INSTALL_FROM_API&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>成功了，绕过了这个文件下载很慢的问题。</p>
<p>但是，当我</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">brew upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>发现了下载速度很慢，不知道这和之前改到清华镜像是否有原因。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x3D;&#x3D;&gt; Fetching node@16
&#x3D;&#x3D;&gt; Downloading https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;homebrew-bottles&#x2F;node%4016-
######################################################################## 100.0%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="step4"><a href="#step4" class="headerlink" title="step4:"></a>step4:</h2><p>到这里事情并没有结束。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget https:&#x2F;&#x2F;formulae.brew.sh&#x2F;api&#x2F;formula.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>速度依然很慢。</p>
<p>但是，基本每条brew指令都需要下载该文件。</p>
<p>实践后，可知：每次运行brew命令前，可以执行</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">export HOMEBREW_NO_INSTALL_FROM_API&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行之后，基本就能使用brew命令了。不过这样只能起到短期效果。</p>
<p>长期解决办法是：把它写进.zshrc or .bash_profile；source一下。</p>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>git命令翻墙和终端翻墙可能仍是问题。</p>
<ul>
<li>目前实测git clone <a href="https://github.com/XXX/XXX">https://github.com/XXX/XXX</a> 没问题 <ul>
<li>速度：M/s </li>
</ul>
</li>
<li>目前实测 wget <a href="https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz">https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz</a><ul>
<li>速度：几十kb/s有点慢 </li>
<li>好在可以在浏览器下载后，move到目标文件夹</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>踩坑</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>一件小事</title>
    <url>/%E8%AE%B0%E5%BD%95/Others/%E4%B8%80%E4%BB%B6%E5%B0%8F%E4%BA%8B/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/ChangQingAAS/For_Picgo@main/img/image-20221203211545712.png![image-20221203211545712](/Users/changqingaas/Library/Application Support/typora-user-images/image-20221203211545712.png" alt="image-20221203211545712"></p>
<p><a href="https://github.com/antlr/grammars-v4/blob/master/golang/examples/unicodeIdentifier.go">https://github.com/antlr/grammars-v4/blob/master/golang/examples/unicodeIdentifier.go</a></p>
<p>当我准备删掉测试未通过样例时的忽然发现。</p>
<p>或许，这就是技术传播的魅力吧！</p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>论文黑话祛魅</title>
    <url>/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Others/%E8%AE%BA%E6%96%87%E9%BB%91%E8%AF%9D%E7%A5%9B%E9%AD%85/</url>
    <content><![CDATA[<p>feature：一个数组</p>
<p>representation：还是一个数组</p>
<p>embedding：把输入映射成数组</p>
<p>提高泛化性：预测更准了</p>
<p>过拟合：训练过头了</p>
<p>attention：加权</p>
<p>adaptive：还是加权</p>
<p>few-shot learning：看了几个样本就学</p>
<p>zero-shot learning：一个没看就开始瞎蒙</p>
<p>self-supervised：自学</p>
<p>semi-supervised：教一点自学一点</p>
<p>unsupervised：没人教了，跟谁学？</p>
<p>end-to-end：一套操作，行云流水搞到底</p>
<p>multi-stage：发现不行，还得一步一步来</p>
<p>domain：我圈起来一堆样本，就管他叫一个domain</p>
<p>transfer：我非得在这一堆样本上训练，用在另一堆样本上，就是不直接训练，就是玩～</p>
<p>adversarial：我加了一部分就是让loss增大</p>
<p>robust：很稳我不会让loss变大的（但也不容易变小了）</p>
<p>state of the art：我（吹nb）第一</p>
<p>outperform：我虽然没第一，但是我比baseline强</p>
<p>baseline：(故意)选出来的方法，让我能够outperform</p>
<p>empirically：我做实验了，不知道为啥work</p>
<p>theoretically：我以为我知道为啥work，但没做实验，或者只做了个toy model</p>
<h2 id="multi"><a href="#multi" class="headerlink" title="multi-"></a>multi-</h2><p>multi-task：把几个loss加一起，完事</p>
<p>multi-domain：把几堆儿样本混一块训练，完事</p>
<p>multi-modality：把视频语音文字图像graph点云xxx混一块训练，完事</p>
<p>multi-domain multi-modal multi-media model：mua～mua～mua～mua……</p>
<p>Transformer：拉成条儿加权</p>
<p>消融实验：控制变量法</p>
<p>n-fold 验证：数据切n份验证遍</p>
<p>集成学习：多训几个模型一起用</p>
<p>back propagation: 求导</p>
<p>Trade-off：两个需求都满足得不好，但都不太差  </p>
<p>Novel：把一个风马牛不相及的东西用在了这里  </p>
<p>Compared method：专门选出来的能打赢的对手  </p>
<p>Rethink：一竿子打翻一船人  </p>
<p>X is all you need：标题只是为了把你骗进来，其实你need lots of tricks  </p>
<p>Long-standing problem: 出现不超过五年的问题  </p>
<p>Efficient：少用了点儿时间或数据  </p>
<p>Intuitive：我想到了你一下子也能想到的东西</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>创新者的困境</title>
    <url>/%E8%AE%B0%E5%BD%95/Others/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E7%9A%84%E6%84%9F%E6%83%B3/</url>
    <content><![CDATA[<p>在6月左右我换了个新电脑。</p>
<p>我把老电脑中的blog项目，保存到百度网盘中已进行迁移。</p>
<p>在把新电脑的各种环境配置的整整齐齐后（最新版本），我开始进行迁移blog到新电脑，我犯的最大错误就是上来就node install之类的指令，使得大量package产生了版本冲突，折腾几个小时后，没整明白（我对node不太熟，所以基本就是几个指令换着用，google报错说咋做我就直接照搬）。</p>
<p>因为当时在做别的作业，所以就把解决这个问题搁置了，后面因为准备找工作，卷毛概绩点都优先于这件事，所以连续搁置下去。</p>
<p>直到今天看新闻到晚上8点，觉得没啥学习动力，开始上网冲浪，无意中看到新人的博客，又激起了我的兴趣，我把项目又下载下来，这次我直接hexo d -g，竟然就成功了。</p>
<p>这充分意识到可能没必要要求‘版本最新’，这个我三年来对于软件，操作系统的洁癖，其实是有无形代价的。仔细一想，我这个我可也是当时配了很久的博客，除了评论功能没有，好像也不缺啥了（PS：我还煞有介事地配了个公益404的界面）。</p>
<p>对于创新、创业来说，是守成，还是继续创新，是一个重大的问题。有时，在一个波诡云谲的全球行业中，对于换届来说，可能守成是更优的选项，对于我的博客来说，现在的项目功能确实够用了（或者说经历教训后，我不开始追求更好的功能了，能用、稳定就行）</p>
<p>今天看新闻联播看到晚上8点，上面是我的借景抒情。</p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL踩坑</title>
    <url>/%E8%B8%A9%E5%9D%91/Pitfalls/wsl%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<h1 id="WSL踩坑"><a href="#WSL踩坑" class="headerlink" title="WSL踩坑"></a>WSL踩坑</h1><p>大二上学期期末，稀里糊涂装了wsl, 一直用到现在。<br>本来是打算，和OS相关，那就装到C盘把。<br>这么一大意，在大三上装东西的时候出了不少问题。（当时没仔细装，而且也不懂）<br>这次为了装temu的交叉编译环境，装了不少东西，直接把C盘干到2G了，这么下去肯定不行。（Ubuntu20。04的主要文件夹就有至少15G了）<br>于是，我就上网搜，发现别人早就整好了vhdx(一个叫虚拟硬盘的东西，我当时没有做，现在做也来不及了），<br>所以别人的限制硬盘占用的方法，转移到别的位置的办法，我都没办法用了。</p>
<p>打算卸载重装到D盘。用这个帖子解决问题了：<a href="https://blog.csdn.net/LaughingMei/article/details/109736965">https://blog.csdn.net/LaughingMei/article/details/109736965</a> </p>
<p>卸载完C盘有16G了。</p>
<p>比较脑瘫，当时看到的有两种方式，第一种要vhdx，第二种不用</p>
]]></content>
      <categories>
        <category>踩坑</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>墨子平台训练教程</title>
    <url>/MARL/MADRL/%E5%A2%A8%E5%AD%90%E5%B9%B3%E5%8F%B0%E8%AE%AD%E7%BB%83%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>下面介绍一下windows版本墨子平台的使用流程：</p>
<ol>
<li><h2 id="进入华戍防务-官网-hs-defense-com-下载软件"><a href="#进入华戍防务-官网-hs-defense-com-下载软件" class="headerlink" title="进入华戍防务 官网(hs-defense.com)下载软件"></a>进入<a href="http://www.hs-defense.com/col.jsp?id=105">华戍防务 官网(hs-defense.com)</a>下载软件</h2></li>
</ol>
<p>我下载的是<code>墨子·联合作战推演系统（个人版）</code> </p>
<p><code>墨子·AI开发包</code>主要是一些开发会用到的代码和文档。代码也可以在gitee.com上找到：<a href="https://gitee.com/hs-defense/moziai">moziai: 墨子AI开发包及“子牙”智能体开源代码  </a></p>
<p><code>竞赛客户端(互联网)</code> 主要是用来军事推演比赛的，与强化学习训练关系不大，可以不下载。</p>
<p><code>墨子·AI版（Linux)</code> 因为一开始没办法下载，后面断断续续也没有弄出什么效果</p>
<p>注：</p>
<ul>
<li><p>文件采用ftp协议下载，下载链接格式为：ftp: ip/port/文件夹s/文件</p>
</li>
<li><p>由于部分浏览器不支持，推荐使用QQ浏览器下载</p>
</li>
<li><p>一般点击下载按钮后，会默认让迅雷接管下载</p>
</li>
</ul>
<ol>
<li><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>​    根据安装手册安装该软件，基本上按照手册进行就可以了</p>
</li>
<li><h2 id="启动该软件"><a href="#启动该软件" class="headerlink" title="启动该软件"></a>启动该软件</h2><ol>
<li>进入安装目录下的\MoziData，右键点击<code>mysql.bat</code>，以管理员身份运行它，随后退出</li>
<li>进入安装目录下的\MoziServer，运行MoziServer.exe，尽量关掉杀毒软件，最好以管理员身份运行<ul>
<li>这里大概会遇到一个问题：<code>临时许可码过期，请联系华戍防务重新授权</code>，具体解决方案略</li>
<li>我在数据库方面也出过问题，不过忘了具体细节了</li>
</ul>
</li>
</ol>
</li>
<li><h2 id="运行代码，进行仿真训练"><a href="#运行代码，进行仿真训练" class="headerlink" title="运行代码，进行仿真训练"></a>运行代码，进行仿真训练</h2><ol>
<li><p>获取代码，在IDE打开代码</p>
</li>
<li><p>加载代码所需的scen想定文件</p>
<ul>
<li>进入墨子平台，可以在想定一栏下找到<code>加载想定</code>的选项，想定文件是从<code>安装路径\MoziServer\bin\Scenarios\</code>获取的，因此需要把代码包里的scen文件放到这里。</li>
<li>加载想定文件，选择推演方</li>
<li>随后可以看到墨子平台上有了具体的想定环境</li>
<li>如果要更改想定文件，改完之后，需要保存，再重新加载<ul>
<li>因为训练的每个回合都会刷新环境，如果不保存更改到新scen文件，那么这个更改只能用于一个回合</li>
</ul>
</li>
</ul>
</li>
<li><p>运行main.py代码即可看到效果</p>
<ul>
<li><p>注：</p>
<ul>
<li><p>这里可能需要指定一下 墨子平台的路径，可以执行代码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">os.environ[&#39;MOZIPATH&#39;] &#x3D; &#39;D:\\MoZiSystem\\Mozi\\MoziServer\\bin&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>也可以在<code>编辑系统环境变量</code>中添加路径</p>
</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ol>
<p>注：Linux版本的墨子平台还在折腾，因为虚拟机比较卡，服务器上又没办法弄出显示界面，还折腾了一堆配置，最近还没弄，如果有结果了，会在这里更新的</p>
]]></content>
      <categories>
        <category>MARL</category>
      </categories>
      <tags>
        <tag>MARL</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>How-to-be-a-good-programmer</title>
    <url>/%E7%A2%8E%E7%A2%8E%E5%BF%B5/Others/To-be-a-good-programmer/</url>
    <content><![CDATA[<h2 id="实例驱动学习"><a href="#实例驱动学习" class="headerlink" title="实例驱动学习"></a>实例驱动学习</h2><p>在知识爆炸的年代, 想成为一个好的程序员, 要具备这样一个精神:</p>
<p><strong>开发者精神</strong></p>
<blockquote>
<p>开发者精神是指, 从学习编程第一天起, 你的目标, 你所做的事, 永远不是以<code>要学会XX</code>为目标, 而是以<code>开发出XX</code>为目标, 深刻意识到你学习的一切, 最终是为了你的开发而服务的。</p>
</blockquote>
<p>而开发者精神的反面则是<code>学生气</code>:</p>
<p><strong>学生气</strong></p>
<blockquote>
<p>从学习编程的第一天起, 就把自己当学生, 上课听讲记笔记为第一位, 记忆知识点为第一位, 买教材读教材为第一位, 追求<code>学会XX</code>, 而不是<code>用它开发出XX</code>。</p>
</blockquote>
<p>我们举个例子， 假如你要学习Java，<code>学生气</code>的学生行为模式:</p>
<pre><code>读教材, 听课, 记笔记, 追求把这个语言的每个知识点都记得很清楚, 追求一种&quot;内功&quot;的修炼, 在这个过程中, 从来不想着用它去&quot;创造&quot;什么. 在学习的第一天起, 他给自己定下了一个目标:

&quot;我这个学期一定要把这个语言的基础打牢, 最后在考试中取得高分, 并且为以后的学习提供更坚实的基础.&quot;
</code></pre><p>那么具有<code>开发者精神</code>的人会这样做:</p>
<pre><code>先大体了解一下Java语言在哪些领域比较强势, 做一个简单的调研, 得出了Java在Web领域很强势这一个信号, 于是在学习Java的第一天起, 他就给自己定下了一个目标: 

&quot;我要在半年内通过学习Java, 运用Java做出一个中小型的, 基于Web的企业管理后台&quot;
</code></pre><p>这两种人, 起点都一样, 都是<code>完全不会Java</code>, 但是最后的结果往往是, 后者无论是知识熟练度还是实用性都会超过前者, 而且整个学习过程会有源源不断地动力.</p>
<p><code>夯实基础</code>这个目标, 其实是空洞的, 什么叫做夯实? 什么叫做基础? 而且就算你真的夯实了基础, 你也极有可能陷入一种<code>虚无感</code>中, 因为你的所有知识, 都会遗忘.</p>
<p>这就是为什么很多计算机专业学生很爱问的一个问题:</p>
<pre><code>&quot;学了这么多知识, 忘了怎么办?&quot;
</code></pre><p>如果你具备<code>开发者精神</code>, 那么你根本不会理会这个问题, 因为, 你开发出的东西, 你做出的产品, 它就是永久存在在这个世界上的, 你的成就感来源于真实的, 具体的, 可持久延续的项目中, 而不是来源于”我学会了什么”.</p>
<p>我们一定要明白:</p>
<pre><code>一切不谈成就感, 不谈反馈的学习劝导, 都是在耍流氓
</code></pre><p>既然我们想获得反馈, 那么一个很现实的建议就是, 在Github上创建你的第一个开源代码仓库, 长期地, 稳定地commit, 当然, 至于这个仓库到底是干啥的, 这个因人而异, 有可能是你自己开发的一个VScode插件, 有可能是你自己写的读书笔记, 在这个不断地commit的过程中, 感受你的代码仓库不断增长不断完善的过程中, 你会获得一个比较持久的反馈和成就感, 一旦有了反馈和成就感, 那么你的学习动力就会一直保持, 也可以从学习中获得快乐.</p>
<p><strong>记住, 你不是学生, 你是开发者.</strong></p>
<h2 id="知识输入与输出"><a href="#知识输入与输出" class="headerlink" title="知识输入与输出"></a>知识输入与输出</h2><p>当你学习一个东西的时候, 如果学完马上用语言讲给别人听, 你会学的更好, 而且会发现新问题.</p>
<p>很多学习理论都指出, 知识的学习, 输入固然重要, 输出更为重要.</p>
<p>输入就是学习别人的知识, 输出就是把自己学会的知识用文字, 语言的形式表达出来, 很多人的学习, 只有输入, 没有输出, 这样的学习肯定是不行的.</p>
<p>几乎所有优秀的程序员, 都有撰写技术文章的习惯, 很多时候, 并不是他们什么都懂, 而是他们刚学会了什么, 然后就围绕着这个刚学会的东西, 用自己的语言讲出来, 久而久之, 就会被别人觉得是大牛, 但是他和你的区别, 有可能仅仅是是否输出的区别.</p>
<p>建议所有计算机学习者, 都要有写技术文章/读书笔记的习惯, 可以发表在自己的个人主页, 其他平台上, 攥写技术文章也可以很好地增加面试官对你的好感.</p>
<p>写技术文章的时候, 最好用<code>MarkDown</code>哦, 程序员是不需要用<code>Word</code>这种东西的, 我们的内容是要方便发表在网站上, <code>Word</code>不能直接在网站里显示, 而<code>MarkDown</code>可以轻易地转换成<code>html</code>格式文件, 在浏览器中显示.</p>
<h2 id="代码风格篇"><a href="#代码风格篇" class="headerlink" title="代码风格篇"></a>代码风格篇</h2><p>现在几乎所有主流语言都有相应的代码风格检查工具, 一般已IDE或Editor的插件或扩展形式给出</p>
<h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><p>设计模式并不是针对任何一种语言, 而是一种用编程语言描述现实世界问题广泛采用的各种模式, 比如, 观察者模式, 工厂模式, 依赖注入模式等.</p>
<p>好的设计模式, 是好代码的保证, 只有先学会了设计模式, 才能在软件设计中游刃有余, 而且更现实的问题是, 现在很多框架, 比如Spring, Angular等, 都充斥了大量的设计模式, 比如<code>Factory Pattern</code>, <code>Dependency Injection Pattern</code>, 你必须理解这些设计模式, 你才能理解这个框架.</p>
<p>个人认为设计模式没有必要买本教材, 结合视频和技术文章, 就足以理解和运用.</p>
<h3 id="小习惯"><a href="#小习惯" class="headerlink" title="小习惯"></a>小习惯</h3><ol>
<li>不要嫌变量名长, 最好可以直接通过变量名推测变量的作用.</li>
<li>重复出现的代码, 封装成独立的类或函数.</li>
<li>提前降低代码的耦合度, 不同作用, 不同类别的代码, 不要混在一起, 最好分成独立的文件</li>
<li>将代码进行业务分层, 比如在Web开发中, 有数据层, 服务层, DTO层, Controller层, 渲染层等, 只有将层次分开了, 才能获得足够的可拓展性, 不然代码多了你就全乱了.</li>
<li>用良好的设计模式去”设计”软件, 在执行一些算法的时候, 可以想一想它的时空复杂度, 想一想怎么可以让它执行地更快.</li>
</ol>
<h2 id="如何管理自己的电脑"><a href="#如何管理自己的电脑" class="headerlink" title="如何管理自己的电脑"></a>如何管理自己的电脑</h2><h3 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h3><p>为了更好的管理我们的各种应用包，最好使用包管理工具来进行各种包，软件的安装和使用, 方便进行卸载, 更新, 安装, 无需打开浏览器即可完成一系列操作.</p>
<blockquote>
<p>linux : apt-get (ubuntu distro)<br>    osx : brew<br>    windows: Chocolatey</p>
</blockquote>
<p>另外, windows平台上的包管理工具, 在国内的网络环境下经常慢的感人, 所以<code>Chocolatey</code>可能使用体验并不好.  推荐使用今年微软新发布的 <code>WSL2</code>, 这个东西不是那种传统的虚拟机, 有了它你可以像操作linux系统那样操作windows系统, 而且支持 <code>docker</code>, 甚至我推荐以后大家所有命令都可以在<code>WSL2</code>里执行.</p>
<h3 id="容器-Docker"><a href="#容器-Docker" class="headerlink" title="容器 - Docker"></a>容器 - Docker</h3><p>为了更方便的进行开发环境配置，我推荐所有计算机学生尽早了解和使用Docker。</p>
<p>Docker 就是为了解决复杂的环境配置问题而生的。</p>
<p>它将你的软件和软件所依赖的所有环境打包成一个镜像(Image), 该镜像可以在任何一台装有docker 的电脑上运行, 和操作系统无关, 也就是docker 把运行环境和你的操作系统隔离开来了，中间隔了一层docker engine 。</p>
<p>写过不少代码的你一定见过这种现象：你的代码在自己电脑上能运行，但是在别人电脑上就会报错，无法运行，原因很简单，任何软件的运行都需要环境。</p>
<p>比如，jar包的运行需要jre ，python脚本的运行需要python 解释器安装在电脑上，以后你可能还需要运行一些服务，比如数据库mysql server , redis , rabbitmq , 随着软件运行环境复杂度的增加, 你的软件运行条件也变得苛刻，如果你想把本地的应用部署到服务器上，那事更多，需要的环境得一个个地装到你的linux服务器上，如何彻底解决这个问题？</p>
<p>只需在你的电脑中安装docker , 你就可以毫无后顾之忧。</p>
<p>所有的环境，服务，软件都是以Image 的形式打包的，Image 中包含了运行你软件的所有东西，比如你的软件是个python 脚本, 并且使用了第三方库flask，那这个Image 中就包含了python ,也就是它的base image , 也同时包含了flask, 这样的话任何一个装有docker的电脑都可以运行你的image。</p>
]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>Advice</tag>
      </tags>
  </entry>
  <entry>
    <title>关于marp-theme-for-tju的探索</title>
    <url>/%E7%A2%8E%E7%A2%8E%E5%BF%B5/Marp/%E5%85%B3%E4%BA%8Emarp-theme-for-tju%E7%9A%84%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<p>事情的起因是，我无意间了解到marp，然后在github看到这样一个主题：<a href="https://github.com/chenyang1999/Marp_theme_for_THUslides">Marp_theme_for_THUslides</a>，于是我就想给本校做一个类似的主题，方便开组会时使用</p>
<p>但是经过很多尝试，我发现我的一些想法并不能实现，于是我暂时搁置，在解决这个需求的过程中，总结了一些marp的主题，主要是自用。</p>
<p>为了不让自己的时间白白浪费，我把自己有价值的一部分work，放到网络上，希望为后面探索的人节省时间。</p>
<p>放弃做marp-theme-tjuslides的主要原因就是：图片不能透明插入，会自动补白，这是我向rgb背景图插入透明校徽图的情况：</p>
<p><img src="https://raw.githubusercontent.com/ChangQingAAS/for_picgo/main/img/20210810203724.png" alt="image-20210810202422699" style="zoom: 67%;" /></p>
<p>这意味着，我使用的theme的颜色是受到限制的，一旦我使用别人的主题时，如果要加入相关元素就要自己改颜色。</p>
<p>或者我可以直接来几张背景图（不过这种情况下，由于一些遮拦，直接引用别人的样式文件可能会出问题，就需要花费时间调整一些样式语句了，）。虽然我觉得这样不够meaningful，但是我还是做了，毕竟也是用的上的，我用一些天大ppt,在<a href="https://github.com/ChangQingAAS/marp-themes/tree/main/tju-images">这里</a>整理了一些天大PPT背景图。</p>
<h2 id="我常用的样式："><a href="#我常用的样式：" class="headerlink" title="我常用的样式："></a>我常用的样式：</h2><hr>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true

# 主题

theme: default

# 标题

title: TCP协议设计

# 页码，出现在右下角

paginate: True 

# 版本

version: 1.0.0 

# 页脚

# footer: 

# 页眉

header: 

# 大小，也可以写16:9

size: 4K

---

&lt;style&gt;

    section&#123; 

      background-image:url(&#39;.&#x2F;tju-images&#x2F;tju0.png&#39;);  

      background-size:cover;  

      position: absolute;  

    &#125;

    section h1 &#123;font-size:40px;color:black;margin-top:px;&#125;

    section h2 &#123;font-size:30px;color:black;margin-top:px;&#125;

    section p &#123;font-size: 25px;color:black;&#125;

    section table &#123;text-align: center;font-size: 32px;color:black;&#125;

    section a &#123;font-size: 25px;color:black;&#125;

    li &#123;font-size: 30px;text-align: left;&#125;


    img &#123;

        margin-left: auto; 

        margin-right:auto; 

        display:block;

        margin:0 auto;

        width:25cm;

      &#125;

&lt;&#x2F;style&gt;
---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>正式使用了一次，ppt做出来是图片，啥都不能动，真的难顶。</p>
<p>感觉不适合多人协作</p>
]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>marp</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>用Markdown制作幻灯片:Marp</title>
    <url>/%E6%95%99%E7%A8%8B/Marp/%E7%94%A8Markdown%E5%88%B6%E4%BD%9C%E5%B9%BB%E7%81%AF%E7%89%87-Marp/</url>
    <content><![CDATA[<h2 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h2><p>本文对以下链接进行了整理：</p>
<ul>
<li><a href="https://www.lianxh.cn/news/97fccdca2d7a5.html">用Markdown制作幻灯片-五分钟学会Marp（上篇）-M110a| 连享会主页 (lianxh.cn)</a></li>
<li><a href="https://www.lianxh.cn/news/521900220dd33.html">用Markdown制作幻灯片-五分钟学会Marp（下篇）-M110b| 连享会主页 (lianxh.cn)</a></li>
<li><a href="https://www.mina.moe/archives/11046">【教程】你在用 Marp 时可能会用的语法 ——litble – MiNa!</a></li>
</ul>
<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>​    在 Microsoft PowerPoint 里面，我们需要调整幻灯片的格式，操作起来些许麻烦。幻灯片通常是辅助演讲者的一个工具，这也是说，幻灯片不需要制作太复杂，简洁美观即可 </p>
<p>​    Markdown 文字排版高效，且风格简洁美观，是许多写作者的不二之选。而多数场景中， Markdown 的这种特点对幻灯片的制作也很合适。</p>
<p>​    那么，我们是否可以使用 Markdown 高效地制作一个漂亮的幻灯片？</p>
<p>​    答案就是：makedown + marp（based on vscode)</p>
<p>注：</p>
<ul>
<li><p>基于Markdown语法,复制黏贴笔记—-&gt;ppt/pdf/html/png</p>
</li>
<li><p>PPT 里面需要的各种文字效果可以用html,css,js等解决</p>
</li>
<li><p>可以用 latex直接写数学公式</p>
</li>
<li><p>可以画表格等(markdown 语法)  </p>
</li>
<li><p>可以直接插入 Emoji</p>
</li>
<li><p>在弹出保存页面时，可以自己选保存的格式</p>
</li>
</ul>
<h2 id="2-下载与安装"><a href="#2-下载与安装" class="headerlink" title="2.下载与安装"></a>2.下载与安装</h2><h3 id="vscode的安装方式"><a href="#vscode的安装方式" class="headerlink" title="vscode的安装方式"></a>vscode的安装方式</h3><p>在VS Code下载插件：marp for VS code 和 markdown  all in one</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig6_%20Marp%E6%8F%92%E4%BB%B6%E4%B8%8B%E8%BD%BD_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<h3 id="其他安装方式"><a href="#其他安装方式" class="headerlink" title="其他安装方式"></a>其他安装方式</h3><p>还可以通过npm 安装 marp,读者可以自行探索</p>
<p>（不过在生成相关文件时，需要做一些命令行，vscode版的基本通过图形界面就可以解决）</p>
<h2 id="3-操作流程"><a href="#3-操作流程" class="headerlink" title="3.操作流程"></a>3.操作流程</h2><h3 id="3-1-新建文件"><a href="#3-1-新建文件" class="headerlink" title="3.1 新建文件"></a>3.1 新建文件</h3><p>打开 VS Code ，点击<code>文件-&gt;新建文件</code>，将其存为 <code>.md</code> 文件。此时，我们就创建好一个 Markdown 文档。</p>
<h3 id="3-2-幻灯片分页"><a href="#3-2-幻灯片分页" class="headerlink" title="3.2 幻灯片分页"></a>3.2 幻灯片分页</h3><p>首先，我们需要在 Markdown 文档开头标记 <code>marp: true</code>，以启用 Marp 功能。也就是告诉编辑器，你要制作的是幻灯片（Slide）。</p>
<p><strong>需要说明的有两点：</strong></p>
<ul>
<li>其一，<code>marp: true</code> 语句中的冒号为半角模式下录入的；上下的 <code>---</code> 不可省略；</li>
<li>其二，新建的 Markdown 文档也可以不做上述标记，通过点击菜单条中的 Marp 图标即可自动添加。具体步骤为：依次点击 <code>Marp 图标</code> → <code>Toggle Marp feature for current Markdown ( markdown.marp.toggleMarpFeature )</code>，软件会自动在文档开头添加 <code>marp: true</code>。如下图所示：</li>
</ul>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/20210602233115.png" alt="img"></p>
<p>文字信息如下：</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true
---# Your slide deck

Start writing!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>幻灯片通常有多个页面，那么该如何分页？</strong></p>
<p>Markdown 通常用<code>---</code>作为水平分割线，而 Marp 则用 <code>---</code> 表示「分页符」，即用以「分割幻灯片」（Slide）。</p>
<p><em>演示效果如下：</em></p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig9_%20%E5%88%86%E9%9A%94%E7%AC%A6_%E5%AE%8B%E6%A3%AE%E5%AE%89.gif" alt="img"></p>
<h3 id="3-3-幻灯片预览"><a href="#3-3-幻灯片预览" class="headerlink" title="3.3 幻灯片预览"></a>3.3 幻灯片预览</h3><p>点击 Marp 图标的右侧，我们就可以在 VS Code 编辑器的右侧实时预览幻灯片。</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig10_%20%E9%A2%84%E8%A7%88_%E5%AE%8B%E6%A3%AE%E5%AE%89.gif" alt="img"></p>
<h3 id="3-4-导出幻灯片"><a href="#3-4-导出幻灯片" class="headerlink" title="3.4 导出幻灯片"></a>3.4 导出幻灯片</h3><p>点击 <code>Marp 图标-&gt; Export slide deck ....( markdown.marp.export )</code>即可导出文件。</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig10_%20Marp%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p>目前，<strong>Marp</strong> 可导出四种格式的文件：</p>
<ul>
<li><strong>HTML</strong></li>
<li><strong>PDF</strong></li>
<li><strong>PPTX</strong> (幻灯片)</li>
<li><strong>PNG</strong> (仅限于幻灯片的第一页)</li>
<li><strong>JPEG</strong> (仅限于幻灯片的第一页)</li>
</ul>
<p>需要注意的是：</p>
<ul>
<li><p>导出 <strong>HTML</strong> 格式的文档不需要安装任何插件，也可以很方便地转换为 PDF 格式。</p>
<ul>
<li>HTML 格式的幻灯片双击即可用默认浏览器打开，亦可右击文件，选择特定的浏览器打开 (建议用 Google 浏览器打开)。</li>
<li>展示时建议采用全屏播放模式：按快捷键 <strong>F11</strong> 即可；再次按下 <strong>F11</strong> 即可退出全屏。</li>
<li>用 Google 浏览器打开后，按快捷键 <strong>Ctrl+P</strong>，并选择「另存为 PDF」，即可把 HTML 格式的幻灯片转换为 PDF 格式。</li>
</ul>
</li>
<li><p>若需导出 PDF 和 PPTX 格式，可能需要安装 <code>pandoc</code></p>
</li>
</ul>
<h2 id="4-指令"><a href="#4-指令" class="headerlink" title="4.指令"></a>4.指令</h2><p>仅靠 Markdown 制作出的幻灯片格式可能会比较单调。为了制作出更加漂亮的幻灯片，我们还需要学习一种被称之为 <strong>指令（Directives）</strong> 的扩展语法。例如，指令 <code>theme</code> 可改变幻灯片的主题，<code>paginate</code> 可显示出幻灯片的页码，<code>footer</code> 用于设置幻灯片的页脚内容， <code>size</code> 可调整幻灯片的大小， <code>backgroundColor</code> 用于变换幻灯片的背景颜色等。</p>
<h3 id="4-1-指令的使用方法"><a href="#4-1-指令的使用方法" class="headerlink" title="4.1 指令的使用方法"></a>4.1 指令的使用方法</h3><p><strong>那么，如何使用这些指令呢？</strong></p>
<p>Marp 提供两种使用方法：</p>
<ul>
<li><p><strong>HTML comment</strong></p>
<p>这种需要在 <code>theme</code> 等指令前后添加<code>&lt;!-- --&gt;</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!--
theme: default
paginate: true
--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><strong>Front-matter</strong></p>
<p>第二种则是直接写在 Markdown 文档的开头（就是将指令和 <code>marp: ture</code> 写一块），此时无须再添加<code>&lt;!-- --&gt;</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: ture
theme: default
paginate: true
---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p> </p>
<h3 id="4-2-指令类型"><a href="#4-2-指令类型" class="headerlink" title="4.2 指令类型"></a>4.2 指令类型</h3><p>指令类型（ Type of directives ）可分为全局指令（ Global directives ）和局部指令（ Local directives ），有点类似于 Stata 中的宏。</p>
<p>其中，全局指令是整个幻灯片设定值，例如 <code>theme</code>、<code>headingDivider</code>、<code>style</code>。在全局指令前面添加前缀 <code>$</code>，就可以实现对整个幻灯片的设定。</p>
<p>而<strong>局部指令用以设置当前幻灯片页面以及后续页面</strong>。例如，我们用<code>&lt;!-- backgroundColor: aqua --&gt;</code> 设置幻灯片的背景颜色。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!-- backgroundColor: aqua --&gt;

This page has aqua background.

---

The second page also has same color.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>幻灯片演示效果如下：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig17_%20%E5%85%A8%E5%B1%80%E6%8C%87%E4%BB%A4_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p>当然，如果您只想将局部指令应用于当前页面，则需要指令前添加前缀 <code>_</code> 。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!-- _backgroundColor: aqua --&gt;

Add underscore prefix &#96;_&#96; to the name of local directives.

---

The second page would not apply setting of directives.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>对比上下两图，可以明显地看出两者之间的差异。</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig18_%20%E5%B1%80%E9%83%A8%E6%8C%87%E4%BB%A4_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<h3 id="4-3-标题分隔符"><a href="#4-3-标题分隔符" class="headerlink" title="4.3 标题分隔符"></a>4.3 标题分隔符</h3><p>除了页面分割符<code>---</code>，如果文章结构比较清晰，我们还可以使用全局指令 <code>headingDivider</code> 分隔幻灯片页面。换句话说，就是 <code>headingDivider</code> 通过识别 Markdown 文档的标题来实现幻灯片分页。</p>
<p>例如，下面两个 Markdown 文档具有相同的输出。</p>
<p>一般语法如下：</p>
<pre class="line-numbers language-none"><code class="language-none"># 1st page

The content of 1st page

---

## 2nd page### The content of 2nd page

Hello, world!

---

# 3rd page

Thanks <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Heading Divider 如下：</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!-- headingDivider: 2 --&gt;# 1st page

The content of 1st page

## 2nd page### The content of 2nd page

Hello, world!

# 3rd page

Thanks <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>个人认为用处不大</p>
<h3 id="4-4-页码"><a href="#4-4-页码" class="headerlink" title="4.4 页码"></a>4.4 页码</h3><p>局部命令 <code>paginate</code> 用于显示幻灯片的页码。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!-- paginate: true --&gt;

You would be able to see a page number of slide in the lower right.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>当然，如果我们不想在标题页面出现页码，只需将指令 <code>paginate</code> 移到第二页即可。</p>
<pre class="line-numbers language-none"><code class="language-none"># Title slide

This page will not paginate by lack of &#96;paginate&#96; local directive.

---

&lt;!-- paginate: true --&gt;

It will paginate slide from a this page.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加页码：<code>&lt;!-- page_number: true --&gt;</code>，取消页码：<code>&lt;!-- page_number:false --&gt;</code>，这个也是，加<code>*</code>表示只对某一页操作</p>
<h3 id="4-5-页眉和页脚"><a href="#4-5-页眉和页脚" class="headerlink" title="4.5 页眉和页脚"></a>4.5 页眉和页脚</h3><p>当需要在多张幻灯片中显示相同的页眉或页脚时，可将局部指令 <code>header</code>或 <code>footer</code> 写在 Markdown 文档的最前面。</p>
<pre class="line-numbers language-none"><code class="language-none">---

marp: true
header: &#39;Stata连享会&#39;
footer: 连享会 · [直播间](http:&#x2F;&#x2F;lianxh.duanshu.com) &amp;emsp;  | &amp;emsp;  lianxh.cn &amp;emsp; | &amp;emsp;  [课程主页](https:&#x2F;&#x2F;lianxh.duanshu.com&#x2F;#&#x2F;brief&#x2F;course&#x2F;c3f79a0395a84d2f868d3502c348eafc) &amp;emsp; | &amp;emsp;  [课程展示](https:&#x2F;&#x2F;gitee.com&#x2F;arlionn&#x2F;p101)

---

# VS Code + Marp : 用 Markdown 制作幻灯片##### 作者:宋森安 (西南财经大学)；张家豪(西北大学)##### 邮箱: songsean@88.com

--- 

### 文章目录
- #### 一、前言
- #### 二、下载与安装
- #### 三、操作教程
- #### 四、讨论
- #### 五、参考资料
- #### 六、相关推文<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述 Markdown 文档改动自 <strong><a href="https://gitee.com/arlionn/md/wikis/Marp - 用 Markdown 写幻灯片.md?sort_id=1987882">连玉君老师的幻灯片</a></strong>，其演示效果如下图：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig27_%20%E9%A1%B5%E8%84%9A_%E5%AE%8B%E6%A3%AE%E5%AE%89.gif" alt="img"></p>
<p>添加页脚：<code>&lt;!-- footer: 页脚内容 --&gt;</code>，如果写为<code>&lt;!-- *footer: 页脚内容 --&gt;</code>，就是仅本页添加页脚。<code>&lt;!-- footer: --&gt;</code> 就相当于取消页脚</p>
<h3 id="4-6页面大小"><a href="#4-6页面大小" class="headerlink" title="4.6页面大小"></a>4.6页面大小</h3><p>写上类似这种：<code>&lt;!-- $size: 16:9 --&gt;</code>，可以调节 PPT 尺寸。</p>
<h3 id="4-7-summary"><a href="#4-7-summary" class="headerlink" title="4.7 summary"></a>4.7 summary</h3><p>下面是我的日常使用</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true
# 主题
theme: nord
# 标题
title: 我是标题
# 页码，出现在右下角
paginate: True 
# 版本
version: 1.0.0 
# 页脚
footer: 我是页脚
# 页眉
header: 我是页眉
# 大小，也可以写16:9
size: 4K
# 类别,原理应该就是样式的叠加，这部分我不太清楚，读者可以自行探索
class:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="5-主题风格"><a href="#5-主题风格" class="headerlink" title="5. 主题风格"></a>5. 主题风格</h2><h3 id="简单演示"><a href="#简单演示" class="headerlink" title="简单演示"></a>简单演示</h3><p>目前，Marp 提供 <strong>Default (书页黄)、Gaia(海蓝) 和 uncover</strong> 三种主题风格。</p>
<p>下面笔者简单演示这三种主题风格：</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true
---
&lt;!-- theme: Default--&gt;
## &lt;!-- fit --&gt; 
VS Code + Marp: 用 Markdown 制作幻灯片
### 来源：Stata 连享会
### 作者：宋森安(西南财经大学); 张家豪(西北大学)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注释：<code>&lt;!-- fit --&gt;</code> 用于自动调整标题（一级标题）大小，以适应幻灯片大小。</p>
</blockquote>
<p>Default 主题风格的演示效果如下：</p>
<p><img src="https://www.mina.moe/wp-content/uploads/2019/01/TIM%E5%9B%BE%E7%89%8720190118110508.png" alt="default"></p>
<p>将<code>&lt;!-- theme: Default--&gt;</code>更换为<code>&lt;!-- theme: Gaia--&gt;</code>，幻灯片演示风格就变成下图：</p>
<p><img src="https://www.mina.moe/wp-content/uploads/2019/01/TIM%E5%9B%BE%E7%89%8720190118110629.png" alt="gaia"></p>
<p>可以发现，在 Gaia 主题背景下，幻灯片的内容会对齐到左上方。但是我们可以使用 <code>class: lead</code> 来改变。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!--
theme: gaia
class: lead
--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加 <code>class: lead</code> 后，幻灯片的演示效果如下：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig13_%20%E9%A3%8E%E6%A0%BC3_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p>Uncover 主题风格演示效果如下：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig16_%20%E9%A3%8E%E6%A0%BC4_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<h3 id="添加新的主题"><a href="#添加新的主题" class="headerlink" title="添加新的主题"></a>添加新的主题</h3><p>在./vscode/settings.json中，把css主题样式文件加入路径：</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;
  &quot;markdown.marp.themes&quot;: [
    &quot;https:&#x2F;&#x2F;tapioca24.github.io&#x2F;marp-themes&#x2F;tapioca24.css&quot;
  ]
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>路径可以是网络地址，也可以是本地地址（最好是你的marp项目所在地址</p>
<h3 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h3><ul>
<li><p>引用一种主题：<code>&lt;!-- $theme: gaia --&gt;</code></p>
</li>
<li><p>在使用了 gaia 主题后，写上：<code>&lt;!-- template: invert --&gt;</code> 后，所有 PPT 默认使用 invert 背景色。</p>
</li>
<li><p>在某一页写上<code>&lt;!-- *template: invert --&gt;</code> 后，仅这一页 PPT 用 invert（<code>*</code>就是仅这一页使用的意思）。</p>
</li>
<li><p>或者直接在header，使用指令直接指定全局主题。（可通过指定某一页的主题来屏蔽全局主题）</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true
theme: tapioca24
---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><h2 id="6-图片语法"><a href="#6-图片语法" class="headerlink" title="6. 图片语法"></a>6. 图片语法</h2><p>图片语法句式为 <code>![](image.jpg)</code>。其中，<code>[keywords]</code> 用于设置幻灯片的尺寸、颜色等参数，<code>(image.jpg)</code>是图片地址。</p>
<p>插入图片的语法：<code>![](图片路径)</code> 路径可以是本机路径也可以是http路径</p>
<h3 id="6-1-调整图片大小"><a href="#6-1-调整图片大小" class="headerlink" title="6.1 调整图片大小"></a>6.1 调整图片大小</h3><p>在<code>[keywords]</code>中添加 <code>width</code> 、 <code>height</code> 等关键词调整图片的大小。</p>
<pre class="line-numbers language-none"><code class="language-none">![width:200px](image.jpg) &lt;!-- Setting width to 200px --&gt;
![height:30cm](image.jpg) &lt;!-- Setting height to 300px --&gt;
![width:200px height:30cm](image.jpg) &lt;!-- Setting both lengths --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这里也可以使用关键词的缩写 <code>w</code> 和 <code>h</code> ：</p>
<pre class="line-numbers language-none"><code class="language-none">![w:32 h:32](image.jpg) &lt;!-- Setting size to 32x32 px --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p> <code>![缩放比例（如 200%)](图片路径)</code>：图片缩放后插入 PPT 中</p>
<h3 id="6-2-图片滤镜"><a href="#6-2-图片滤镜" class="headerlink" title="6.2 图片滤镜"></a>6.2 图片滤镜</h3><p>Marp 还支持将 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/filter">CSS filters</a> 应用于图片语法，替换<code>[keywords]</code>中的内容，可对图片进行渲染。例如，<code>![blur:10px]()</code>、<code>![brightness:1.5]()</code> 、 <code>![contrast:200%]()</code>、<code>![saturate:2.0]()</code>、<code>![sepia:1.0]()</code>等指令。当省略括号内的参数时，软件会直接使用默认参数。</p>
<p>当然，我们可以将多个滤镜应用于图片。</p>
<pre class="line-numbers language-none"><code class="language-none">![brightness:.8 sepia:50%](https:&#x2F;&#x2F;fig-lianxh.oss-cn-shenzhen.aliyuncs.com&#x2F;Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig20_%20%E8%A5%BF%E5%8D%97%E8%B4%A2%E7%BB%8F%E5%A4%A7%E5%AD%A6_%E5%AE%8B%E6%A3%AE%E5%AE%89.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>例如，笔者使用 <code>![brightness:.8 sepia:50%](https://example.com/image.jpg)</code>，原图就被渲染成深褐色。</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig21_%20%E8%A5%BF%E5%8D%97%E8%B4%A2%E7%BB%8F%E5%A4%A7%E5%AD%A6_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p> </p>
<h3 id="6-3-幻灯片背景"><a href="#6-3-幻灯片背景" class="headerlink" title="6.3 幻灯片背景"></a>6.3 幻灯片背景</h3><p>关键词 <code>bg</code> 可设置幻灯片的背景，具体句式为：<code>![bg](https://example.com/background.jpg)</code>。</p>
<p>此外，我们可在 <code>bg</code> 后添加关键词选项，用于调整背景图片的尺寸。</p>
<p>例如，<code>![bg cover](image.jpg)</code>（缩放图像以填充幻灯片，这也是默认图片设置） 、 <code>![bg contain](image.jpg)</code> （缩放图像以适应幻灯片） 、 <code>![bg auto](image.jpg)</code>（不缩放图像，并使用原始大小） 、 <code>![bg 150%](image.jpg)</code>（按照指定百分比缩放）。</p>
<p> 若一页 PPT 内插入多张背景图片，它们会并列分布</p>
<p>也可使用这样的语法定义幻灯片背景</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;style scoped&gt;
section&#123;
  background-image:url(&#39;.&#x2F;tju-images&#x2F;tju1.png&#39;);
  background-size:cover;
  position: absolute;
  &#125;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="6-4-高级背景"><a href="#6-4-高级背景" class="headerlink" title="6.4 高级背景"></a>6.4 高级背景</h3><p>我们还可以通过高级背景来实现多重背景、背景拆分，甚至通过图片滤镜来设置幻灯片背景。</p>
<pre class="line-numbers language-none"><code class="language-none">![bg](https:&#x2F;&#x2F;fakeimg.pl&#x2F;800x600&#x2F;0288d1&#x2F;fff&#x2F;?text&#x3D;A)
![bg](https:&#x2F;&#x2F;fakeimg.pl&#x2F;800x600&#x2F;02669d&#x2F;fff&#x2F;?text&#x3D;B)
![bg](https:&#x2F;&#x2F;fakeimg.pl&#x2F;800x600&#x2F;67b8e3&#x2F;fff&#x2F;?text&#x3D;C)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注释：背景图片由网站 <a href="https://fakeimg.pl/">fakeimg.pl</a> 自动生成的<strong>假图片</strong>，改变 <code>text=</code> 后的内容，图片文字随之改变。</p>
</blockquote>
<p>多重背景图的演示效果如下：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig14_%20%E8%83%8C%E6%99%AF1_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<pre class="line-numbers language-none"><code class="language-none">![bg vertical](https:&#x2F;&#x2F;fakeimg.pl&#x2F;800x600&#x2F;0288d1&#x2F;fff&#x2F;?text&#x3D;A)
![bg](https:&#x2F;&#x2F;fakeimg.pl&#x2F;800x600&#x2F;02669d&#x2F;fff&#x2F;?text&#x3D;B)
![bg](https:&#x2F;&#x2F;fakeimg.pl&#x2F;800x600&#x2F;67b8e3&#x2F;fff&#x2F;?text&#x3D;C)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>在 <code>bg</code> 后加入 <code>vertical</code> 后，背景图片就会垂直排列，幻灯片演示效果如下图：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig15_%20%E8%83%8C%E6%99%AF2_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p>在 <code>bg</code> 右侧添加 <code>left</code> 或 <code>right</code> 可设置背景图的位置。添加 <code>left</code> 或 <code>right</code> 后，幻灯片内容所占的空间也会减小一半。</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true
---
![bg left](https:&#x2F;&#x2F;fig-lianxh.oss-cn-shenzhen.aliyuncs.com&#x2F;Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig20_%20%E8%A5%BF%E5%8D%97%E8%B4%A2%E7%BB%8F%E5%A4%A7%E5%AD%A6_%E5%AE%8B%E6%A3%AE%E5%AE%89.jpg)

&lt;!-- color: black--&gt;# 欢迎报考 西北大学<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>拆分背景的演示效果如下图：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig22_%20%E5%88%86%E6%8B%86%E8%83%8C%E6%99%AF1_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p>我们也可以将多张图片固定在一侧。</p>
<p>文本信息如下：</p>
<pre class="line-numbers language-none"><code class="language-none">---
marp: true
---
![bg right](https:&#x2F;&#x2F;fig-lianxh.oss-cn-shenzhen.aliyuncs.com&#x2F;Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig20_%20%E8%A5%BF%E5%8D%97%E8%B4%A2%E7%BB%8F%E5%A4%A7%E5%AD%A6_%E5%AE%8B%E6%A3%AE%E5%AE%89.jpg)

![bg](https:&#x2F;&#x2F;fig-lianxh.oss-cn-shenzhen.aliyuncs.com&#x2F;Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig20_%20%E8%A5%BF%E5%8D%97%E8%B4%A2%E7%BB%8F%E5%A4%A7%E5%AD%A6_%E5%AE%8B%E6%A3%AE%E5%AE%89.jpg)

&lt;!-- color: black--&gt;# 欢迎报考 ##  西北大学、西南财经大学<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>幻灯片演示效果如下图：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig23_%20%E5%88%86%E6%8B%86%E8%83%8C%E6%99%AF2_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<p>除了通过图片设置背景外，Marp 也支持设定颜色参数来改变幻灯片背景。背景颜色的基本句式为 <code>![bg](颜色参数)</code> ，文字颜色的基本句式为 <code>![](颜色参数)</code>。如下图所示：</p>
<p><img src="https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/Marp%E5%88%9B%E5%BB%BA%E5%B9%BB%E7%81%AF%E7%89%87_Fig24_%20%E9%A2%9C%E8%89%B2%E8%AE%BE%E7%BD%AE_%E5%AE%8B%E6%A3%AE%E5%AE%89.png" alt="img"></p>
<h2 id="7-一些技巧"><a href="#7-一些技巧" class="headerlink" title="7.一些技巧"></a>7.一些技巧</h2><h3 id="from-tapioca24"><a href="#from-tapioca24" class="headerlink" title="from tapioca24"></a>from <a href="https://github.com/tapioca24">tapioca24</a></h3><p>There are several utility classes that can be used to enrich the presentation of slides.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Class</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>text-center</code></td>
<td>Align all content to the center.</td>
</tr>
<tr>
<td><code>text-&lt;size&gt;</code></td>
<td>Increase the font size. The <code>size</code> can be specified in intervals of 25 from 125 to 1000.</td>
</tr>
</tbody>
</table>
</div>
<p>Give the class to only the desired page by writing the following in the slide.</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;!-- _class: text-center text-125 --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://sspai.com/post/55718">Marp：用 Markdown「写」PPT 的新选择 - 少数派 (sspai.com)</a></li>
<li><a href="https://marpit.marp.app/"><strong>Marpit</strong>: Markdown slide deck framework</a></li>
<li><a href="https://marp.app/"><strong>Marp</strong>: Markdown Presentation Ecosystem</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=marp-team.marp-vscode"><strong>Marp for VS Code</strong> - Visual Studio Marketplace</a></li>
<li><a href="https://github.com/marp-team/marp-vscode"><strong>GitHub - Marp for VS Code</strong>: Create slide deck written in Marp Markdown on VS Code</a></li>
<li><a href="https://fakeimg.pl/"><strong>fakeimg.pl</strong></a></li>
<li><strong><a href="https://gitee.com/arlionn/md">连享会 Markdown 仓库</a></strong></li>
</ul>
<p> </p>
<h2 id="相关推文"><a href="#相关推文" class="headerlink" title="相关推文"></a>相关推文</h2><ul>
<li>专题：<a href="https://www.lianxh.cn/blogs/30.html">Markdown</a><ul>
<li><a href="https://www.lianxh.cn/news/03ff18d8a9957.html">Markdown：五分钟Markdown教程</a></li>
<li><a href="https://www.lianxh.cn/news/845d7f5a2d977.html">Markdown教程之LaTeX数学公式简介</a></li>
<li><a href="https://www.lianxh.cn/news/6dfbbaefbb2d5.html">Markdown：一键将-Word-转换为-Markdown</a></li>
<li><a href="https://www.lianxh.cn/news/e3116b7e22ff8.html">Markdown-图床</a></li>
<li><a href="https://www.lianxh.cn/news/554f3e9c9f08d.html">Markdown常用LaTex数学公式</a></li>
<li><a href="https://www.lianxh.cn/news/dbbd90d8b96ac.html">连玉君Markdown笔记</a></li>
<li><a href="https://www.lianxh.cn/news/c061d6b77c6aa.html">Markdown中书写LaTeX数学公式简介</a></li>
<li><a href="https://www.lianxh.cn/news/61836b4326f32.html">在 Markdown 中使用表情符号</a></li>
<li><a href="https://www.lianxh.cn/news/1be9d1ba1a023.html">在 Markdown 中使用表情符号</a></li>
<li><a href="https://www.lianxh.cn/news/054fd41922063.html">mdnice.cn——Markdown、知乎、公众号排版神器</a></li>
<li><a href="https://www.lianxh.cn/news/b37f5fac84457.html">两种网页转Markdown的简便方法</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>折腾</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
